temp <- strftime(primeDay_tweets_df$created, '%Y-%m-%d')
head(temp)
head(primeDay_tweets_df$created)
if (file.exists(paste(hashtags, '_stack.csv'))== FALSE) {
write.csv(primeDay_tweets_df, file = paste(hashtags, '_stack.csv'), row.names = FALSE)
}
if (file.exists(paste(hashtags, '_stack.csv'))== FALSE) {
write.csv(primeDay_tweets_df, file = paste('primeDay', '_stack.csv'), row.names = FALSE)
}
#setup the API keys
setwd('C:\\Users\\anupama25\\Desktop\\TwitterProject')
if (file.exists(paste(hashtags, '_stack.csv'))== FALSE) {
write.csv(primeDay_tweets_df, file = paste('primeDay', '_stack.csv'), row.names = FALSE)
}
pos_dic = scan('wordDictionaryFiles/opinion-lexicon-English/positive-words.txt',
what='character', comment.char=';')
pos_dic = scan('/wordDictionaryFiles/opinion-lexicon-English/positive-words.txt',
what='character', comment.char=';')
pos_dic = scan('/wordDictionaryFiles/positive-words.txt',
what='character', comment.char=';')
pos_dic = scan('wordDictionaryFiles/positive-words.txt',
what='character', comment.char=';')
head(pos_dic)
neg_dic = scan('wordDictionaryFiles/negative-words.txt',
what='character', comment.char=';')
# Add a few twitter-specific negative phrases
pos_dic = c(pos_dic, 'wtf', 'epicfail', 'douchebag')
neg_dic = c(neg_dic, 'upgrade', ':)', '#iVoted', 'voted')
install.packages("plyr")
install.packages("stringr")
score_sentiment <- function(sentences, pos_words, neg_words, .progress='none')
{
require(plyr)
require(stringr)
scores <- laply(sentences, function(sentence, pos_words, neg_words){
sentence <- gsub('[[:punct:]]', "", sentence) #remove any punctuations from tweets
sentence <- gsub('[[:cntrl:]]', "", sentence) #remove control statements from tweets
sentence <- gsub('\d+', "", sentence) #remove numeric entries from tweets
sentence <- tolower(sentence) #change to lower text
word_list <- str_split(sentence, '\s+')
words <- unlist(word.list)
pos_matches <- match(words, pos.words)
neg_matches <- match(words, neg.words)
pos_matches <- !is.na(pos_matches)
neg.matches <- !is.na(neg_matches)
score <- sum(pos_matches) - sum(neg_matches)
return(score)
}, pos_words, neg_words, .progress=.progress)
scores_df <- data.frame(score=scores, text=sentences)
return(scores_df)
}
score.sentiment <- function(sentences, pos.words, neg.words, .progress='none')
{
require(plyr)
require(stringr)
scores <- laply(sentences, function(sentence, pos.words, neg.words){
sentence <- gsub('[[:punct:]]', "", sentence) #remove any punctuations from tweets
sentence <- gsub('[[:cntrl:]]', "", sentence) #remove control statements from tweets
sentence <- gsub('\d+', "", sentence) #remove numeric entries from tweets
sentence <- tolower(sentence) #change to lower text
word.list <- str_split(sentence, '\s+')
words <- unlist(word.list)
pos.matches <- match(words, pos.words)
neg.matches <- match(words, neg.words)
pos.matches <- !is.na(pos.matches)
neg.matches <- !is.na(neg.matches)
score <- sum(pos.matches) - sum(neg.matches)
return(score)
}, pos.words, neg.words, .progress=.progress)
scores.df <- data.frame(score=scores, text=sentences)
return(scores.df)
}
score.sentiment <- function(sentences, pos.words, neg.words, .progress='none')
{
require(plyr)
require(stringr)
scores <- laply(sentences, function(sentence, pos.words, neg.words){
sentence <- gsub('[[:punct:]]', "", sentence)
sentence <- gsub('[[:cntrl:]]', "", sentence)
sentence <- gsub('\d+', "", sentence)
sentence <- tolower(sentence)
word.list <- str_split(sentence, '\s+')
words <- unlist(word.list)
pos.matches <- match(words, pos.words)
neg.matches <- match(words, neg.words)
pos.matches <- !is.na(pos.matches)
neg.matches <- !is.na(neg.matches)
score <- sum(pos.matches) - sum(neg.matches)
return(score)
}, pos.words, neg.words, .progress=.progress)
scores.df <- data.frame(score=scores, text=sentences)
return(scores.df)
}
score.sentiment <- function(sentences, pos.words, neg.words, .progress='none')
{
require(plyr)
require(stringr)
scores <- laply(sentences, function(sentence, pos.words, neg.words){
sentence <- gsub('[[:punct:]]', "", sentence)
sentence <- gsub('[[:cntrl:]]', "", sentence)
sentence <- gsub('\\d+', "", sentence)
sentence <- tolower(sentence)
word.list <- str_split(sentence, '\\s+')
words <- unlist(word.list)
pos.matches <- match(words, pos.words)
neg.matches <- match(words, neg.words)
pos.matches <- !is.na(pos.matches)
neg.matches <- !is.na(neg.matches)
score <- sum(pos.matches) - sum(neg.matches)
return(score)
}, pos.words, neg.words, .progress=.progress)
scores.df <- data.frame(score=scores, text=sentences)
return(scores.df)
}
pos.words <- pos_dic
neg.words <- neg_dic
primeDay_tweets_df$text <- as.factor(primeDay_tweets_df$text)
scores <- score.sentiment(primeDay_tweets_df$text, pos.words, neg.words, .progress='text')
require(plyr)
install.packages("dplyr")
score.sentiment <- function(sentences, pos.words, neg.words, .progress='none')
{
require(dplyr)
require(stringr)
scores <- laply(sentences, function(sentence, pos.words, neg.words){
sentence <- gsub('[[:punct:]]', "", sentence)
sentence <- gsub('[[:cntrl:]]', "", sentence)
sentence <- gsub('\\d+', "", sentence)
sentence <- tolower(sentence)
word.list <- str_split(sentence, '\\s+')
words <- unlist(word.list)
pos.matches <- match(words, pos.words)
neg.matches <- match(words, neg.words)
pos.matches <- !is.na(pos.matches)
neg.matches <- !is.na(neg.matches)
score <- sum(pos.matches) - sum(neg.matches)
return(score)
}, pos.words, neg.words, .progress=.progress)
scores.df <- data.frame(score=scores, text=sentences)
return(scores.df)
}
pos.words <- pos_dic
neg.words <- neg_dic
primeDay_tweets_df$text <- as.factor(primeDay_tweets_df$text)
scores <- score.sentiment(primeDay_tweets_df$text, pos.words, neg.words, .progress='text')
tolower("anduKFKsf")
a= primeDay_tweets_df$text[1]
a
tolower(a)
a
scores <- score.sentiment(primeDay_tweets_df$text, pos.words, neg.words, .progress='text')
scores <- score.sentiment(primeDay_tweets_df$text, pos.words, neg.words, .progress='text')
head(scores)
scores <- score.sentiment(primeDay_tweets_df$text, pos.words, neg.words, .progress='text')
tweets <- iconv(primeDay_tweets_df$text, "WINDOWS-1252","UTF-8")
scores <- score.sentiment(tweets, pos.words, neg.words, .progress='text')
head(scores)
View(scores)
summary(scores)
View(scores)
hist(scores$score)
hashtags_temp <- c('#primeday', '#primeday2018', '#primedayfail', '#primedaydeals', '#amazonprimeday',
'#amazonprimedaysale', '#amazonprimedayfail', '#amazonprimeday2018', '#amazoncrashed')
hashtags <- paste(hashtags_temp, collapse = ' OR ')
primeDay_tweets <- searchTwitter(hashtags , n=2000)
primeDay_tweets_df <- twListToDF(primeDay_tweets)
primeDay_tweets_df <- primeDay_tweets_df[, order(names(primeDay_tweets_df))] #ordering file with column names
pos_dic = scan('wordDictionaryFiles/positive-words.txt',
what='character', comment.char=';')
neg_dic = scan('wordDictionaryFiles/negative-words.txt',
what='character', comment.char=';')
# Add a few twitter-specific negative phrases
pos_dic = c(pos_dic, 'wtf', 'epicfail', 'douchebag')
neg_dic = c(neg_dic, 'upgrade', ':)', '#iVoted', 'voted')
#writing a function to calculate scores
score.sentiment <- function(sentences, pos.words, neg.words, .progress='none')
{
require(dplyr)
require(stringr)
scores <- laply(sentences, function(sentence, pos.words, neg.words){
sentence <- gsub('[[:punct:]]', "", sentence)
sentence <- gsub('[[:cntrl:]]', "", sentence)
sentence <- gsub('\\d+', "", sentence)
sentence <- tolower(sentence)
word.list <- str_split(sentence, '\\s+')
words <- unlist(word.list)
pos.matches <- match(words, pos.words)
neg.matches <- match(words, neg.words)
pos.matches <- !is.na(pos.matches)
neg.matches <- !is.na(neg.matches)
score <- sum(pos.matches) - sum(neg.matches)
return(score)
}, pos.words, neg.words, .progress=.progress)
scores.df <- data.frame(score=scores, text=sentences)
return(scores.df)
}
pos.words <- pos_dic
neg.words <- neg_dic
primeDay_tweets_df$text <- as.factor(primeDay_tweets_df$text)
tweets <- iconv(primeDay_tweets_df$text, "WINDOWS-1252","UTF-8")
scores <- score.sentiment(tweets, pos.words, neg.words, .progress='text')
hist(scores$score)
install.packages("ggplot2")
stat <- scores
stat <- mutate(stat, tweet=ifelse(stat$score > 0, 'positive', ifelse(stat$score < 0, 'negative', 'neutral')))
View(stat)
hist(stat$tweet)
hist(as.factor(stat$tweet))
stat <- mutate(stat, tweet=ifelse(stat$score > 0, 1, ifelse(stat$score < 0, -1, 0)))
hist(stat$tweet)
stat <- mutate(stat, tweet=ifelse(stat$score > 0, 'positive', ifelse(stat$score < 0, 'negative', 'neutral')))
by.tweet <- group_by(stat, tweet)
by.tweet <- summarise(by.tweet, number=n())
ggplot(by.tweet, aes(tweet, number)) + geom_line(aes(group=tweet, color=tweet), size=2) +
geom_point(aes(group=tweet, color=tweet), size=4) +
theme(text = element_text(size=18), axis.text.x = element_text(angle=90, vjust=1)) +
#stat_summary(fun.y = 'sum', fun.ymin='sum', fun.ymax='sum', colour = 'yellow', size=2, geom = 'line') +
ggtitle('PrimeDay')
ggplot2(by.tweet, aes(tweet, number)) + geom_line(aes(group=tweet, color=tweet), size=2) +
geom_point(aes(group=tweet, color=tweet), size=4) +
theme(text = element_text(size=18), axis.text.x = element_text(angle=90, vjust=1)) +
#stat_summary(fun.y = 'sum', fun.ymin='sum', fun.ymax='sum', colour = 'yellow', size=2, geom = 'line') +
ggtitle('PrimeDay')
library(ggplot2)
ggplot2(by.tweet, aes(tweet, number)) + geom_line(aes(group=tweet, color=tweet), size=2) +
geom_point(aes(group=tweet, color=tweet), size=4) +
theme(text = element_text(size=18), axis.text.x = element_text(angle=90, vjust=1)) +
#stat_summary(fun.y = 'sum', fun.ymin='sum', fun.ymax='sum', colour = 'yellow', size=2, geom = 'line') +
ggtitle('PrimeDay')
stat$created <- primeDay_tweets_df$created
stat$created <- as.Date(stat$created)
stat <- mutate(stat, tweet=ifelse(stat$score > 0, 'positive', ifelse(stat$score < 0, 'negative', 'neutral')))
s
a
stat$created <- as.Date(stat$created)
stat <- mutate(stat, tweet=ifelse(stat$score > 0, 'positive', ifelse(stat$score < 0, 'negative', 'neutral')))
by.tweet <- group_by(stat, tweet, created)
by.tweet <- summarise(by.tweet, number=n())
#create plot
ggplot2(by.tweet, aes(created, number)) + geom_line(aes(group=tweet, color=tweet), size=2) +
geom_point(aes(group=tweet, color=tweet), size=4) +
theme(text = element_text(size=18), axis.text.x = element_text(angle=90, vjust=1)) +
#stat_summary(fun.y = 'sum', fun.ymin='sum', fun.ymax='sum', colour = 'yellow', size=2, geom = 'line') +
ggtitle('PrimeDay')
by.tweet <- summarise(by.tweet, number=n())
number
#create plot
ggplot(by.tweet, aes(created, number)) + geom_line(aes(group=tweet, color=tweet), size=2) +
geom_point(aes(group=tweet, color=tweet), size=4) +
theme(text = element_text(size=18), axis.text.x = element_text(angle=90, vjust=1)) +
#stat_summary(fun.y = 'sum', fun.ymin='sum', fun.ymax='sum', colour = 'yellow', size=2, geom = 'line') +
ggtitle('PrimeDay')
#create plot
ggplot(by.tweet, aes(created, number)) + geom_line(aes(group=tweet, color=tweet), size=2) +
geom_point(aes(group=tweet, color=tweet), size=4) +
theme(text = element_text(size=18), axis.text.x = element_text(angle=90, vjust=1)) + ggtitle('PrimeDay')
view(by.tweet)
View(by.tweet)
stat <- mutate(stat, tweet=ifelse(stat$score > 0, 'positive', ifelse(stat$score < 0, 'negative', 'neutral')))
View(stat)
by.tweet <- group_by(stat, tweet)
View(by.tweet)
by.tweet <- group_by(stat, tweet,created)
View(by.tweet)
by.tweet <- summarise(by.tweet, number=n())
View(by.tweet)
#create plot
ggplot(by.tweet, aes(created, number)) + geom_line(aes(group=tweet, color=tweet), size=2) +
geom_point(aes(group=tweet, color=tweet), size=4) +
theme(text = element_text(size=18), axis.text.x = element_text(angle=90, vjust=1)) + ggtitle('PrimeDay')
scores <- mutate(scores, tweet=ifelse(scores$score > 0, 'positive', ifelse(scores$score < 0, 'negative', 'neutral')))
View(scores)
stat <- scores
stat$created <- primeDay_tweets_df$created
stat$created <- as.Date(stat$created)
stat <- mutate(stat, tweet=ifelse(stat$score > 0, 'positive', ifelse(stat$score < 0, 'negative', 'neutral')))
scores <- score.sentiment(tweets, pos.words, neg.words, .progress='text')
scores <- mutate(scores, tweet=ifelse(stat$score > 0, 'positive', ifelse(scores$score < 0, 'negative', 'neutral')))
by.tweet <- group_by(scores, tweet)
View(by.tweet)
by.tweet <- summarise(by.tweet, number=n())
plot(by.tweet$tweet, by.tweet$number)
hist(by.tweet$number)
hist(scores$tweet)
scores <- mutate(scores, tweet=ifelse(stat$score > 0, 1, ifelse(scores$score < 0, -1, 0)))
hist(scores$tweet)
qplot(scores$score, geom = 'histogram')
qplot(scores$tweet, geom = 'histogram')
scores <- mutate(scores, tweet=ifelse(stat$score > 0, 'positive', ifelse(scores$score < 0, 'negative', 'neutral')))
qplot(scores$tweet, geom = 'histogram')
qplot(by.tweet$tweet, geom = 'histogram')
barplot(scores$score)
barplot(table(scores$score))
barplot(table(scores$tweet))
barplot(table(scores$tweet), main = "Reaction to Amazon Prime Day (based on 2000 tweete)", xlab = "Reaction", ylab ="# Tweets"
col= c("red","blue","green"))
barplot(table(scores$tweet), main = "Reaction to Amazon Prime Day (based on 2000 tweete)", xlab = "Reaction", ylab ="# Tweets")
barplot(table(scores$tweet), main = "Reaction to Amazon Prime Day (based on 2000 tweete)", xlab = "Reaction", ylab ="# Tweets", col = c("Red","Blue","Green"))
barplot(table(scores$tweet), main = "Reaction to Amazon Prime Day (based on 2000 tweete)", xlab = "Reaction", ylab ="# Tweets", col = c("Red","light Blue","Green"))
barplot(table(scores$tweet), main = "Reaction to Amazon Prime Day (based on 2000 tweete)", ylim = c(0,1200) , xlab = "Reaction", ylab ="# Tweets", col = c("Red","light Blue","Green"))
barplot(table(scores$tweet), main = "Reaction to Amazon Prime Day (based on 2000 tweete)", ylim = c(0,1000) , xlab = "Reaction", ylab ="# Tweets", col = c("Red","light Blue","Green"))
barplot(table(scores$tweet), main = "Reaction to Amazon Prime Day (Based on 2000 tweets)", ylim = c(0,1000) , xlab = "Reaction", ylab ="# Tweets", col = c("Red","light Blue","Green"))
#setup the API keys
setwd('C:\\Users\\anupama25\\Desktop\\TwitterProject')
api_key <- "DxSUBTzVMQ0HYvaHRqzTdZ5LG"
api_secret <- "4owijDG4WZNOru8zO8uce3HuLFCJYmGh6TAMRWbi3cqQanz2CA"
access_token <- "192075285-Zt7AYqaRDHM6BqrbUAHMLdV2H5a4TdH99e1ZqyHV"
access_token_secret <- "aHjklf5O2GZY855UJIf2Q6Nb08v933xZIF4ev46d0jFaW"
setup_twitter_oauth(api_key, api_secret, access_token, access_token_secret)
#accessing reaction tweet for Amazon Prime day
hashtags_temp <- c('#primeday', '#primeday2018', '#primedayfail', '#primedaydeals', '#amazonprimeday',
'#amazonprimedaysale', '#amazonprimedayfail', '#amazonprimeday2018', '#amazoncrashed')
hashtags <- paste(hashtags_temp, collapse = ' OR ')
primeDay_tweets <- searchTwitter(hashtags , n=2000)
#convert list to dataframe
primeDay_tweets_df <- twListToDF(primeDay_tweets)
#View(primeDay_tweets_df)
primeDay_tweets_df <- primeDay_tweets_df[, order(names(primeDay_tweets_df))] #ordering file with column names
#for creating cumulative file
#temp <- strftime(primeDay_tweets_df$created, '%Y-%m-%d')
# if (file.exists(paste(hashtags, '_stack.csv'))== FALSE) {
#   write.csv(primeDay_tweets_df, file = paste('primeDay', '_stack.csv'), row.names = FALSE)
# }
#writing a function to calculate scores
score.sentiment <- function(sentences, pos.words, neg.words, .progress='none')
{
require(dplyr)
require(stringr)
scores <- laply(sentences, function(sentence, pos.words, neg.words){
sentence <- gsub('[[:punct:]]', "", sentence)
sentence <- gsub('[[:cntrl:]]', "", sentence)
sentence <- gsub('\\d+', "", sentence)
sentence <- tolower(sentence)
word.list <- str_split(sentence, '\\s+')
words <- unlist(word.list)
pos.matches <- match(words, pos.words)
neg.matches <- match(words, neg.words)
pos.matches <- !is.na(pos.matches)
neg.matches <- !is.na(neg.matches)
score <- sum(pos.matches) - sum(neg.matches)
return(score)
}, pos.words, neg.words, .progress=.progress)
scores.df <- data.frame(score=scores, text=sentences)
return(scores.df)
}
#downloaded and used pos n negative word-list from github.
pos_dic = scan('wordDictionaryFiles/positive-words.txt',
what='character', comment.char=';')
neg_dic = scan('wordDictionaryFiles/negative-words.txt',
what='character', comment.char=';')
# Add a few twitter-specific negative phrases
pos.words <- c(pos_dic, 'wtf', 'epicfail', 'douchebag')
neg.words <-  c(neg_dic, 'upgrade', ':)', '#iVoted', 'voted')
primeDay_tweets_df$text <- as.factor(primeDay_tweets_df$text)
tweets <- iconv(primeDay_tweets_df$text, "WINDOWS-1252","UTF-8")
scores <- score.sentiment(tweets, pos.words, neg.words, .progress='text')
#total evaluation and visualization: positive negative neutral
scores <- mutate(scores, tweet=ifelse(stat$score > 0, 'Positive', ifelse(scores$score < 0, 'Negative', 'Neutral')))
barplot(table(scores$tweet), main = "Reaction to Amazon Prime Day (Based on 2000 tweets)", ylim = c(0,1000) , xlab = "Reaction", ylab ="# Tweets", col = c("Red","light Blue","Green"))
1
barplot(table(scores$tweet), main = "Reaction to Amazon Prime Day (Based on 2000 tweets)", ylim = c(0,1000) , xlab = "Reaction", ylab ="# Tweets", col = c("Red","light Blue","Green"))
barplot(table(scores$tweet), main = "Reaction to Amazon Prime Day", ylim = c(0,1000) , xlab = "Reaction", ylab ="# Tweets", col = c("Red","light Blue","Green"))
primeDay_tweets <- searchTwitter(hashtags , n=200)
install.packages("twitteR")
install.packages("twitteR")
install.packages("ROAuth")
install.packages("httr")
install.packages("httr")
primeDay_tweets <- searchTwitter(hashtags , since = '2018-07-15', until = '2018-07-17', n=200)
install.packages("twitteR")
install.packages("twitteR")
install.packages("ROAuth")
install.packages("httr")
install.packages("httr")
install.packages("stringr")
install.packages("plyr")
library(twitteR)
library(ROAuth)
library(httr)
library(dplyr)
library(stringr)
library(plyr)
hashtags_temp <- c('#primeday', '#primeday2018', '#primedayfail', '#primedaydeals', '#amazonprimeday',
'#amazonprimedaysale', '#amazonprimedayfail', '#amazonprimeday2018', '#amazoncrashed')
hashtags <- paste(hashtags_temp, collapse = ' OR ')
primeDay_tweets <- searchTwitter(hashtags , since = '2018-07-15', until = '2018-07-17', n=200)
setup_twitter_oauth(api_key, api_secret, access_token, access_token_secret)
primeDay_tweets <- searchTwitter(hashtags , since = '2018-07-15', until = '2018-07-17', n=200)
primeDay_tweets <- searchTwitter(hashtags , since = '2018-07-15', until = '2018-07-17', n=1000000)
primeDay_tweets_df <- twListToDF(primeDay_tweets)
primeDay_tweets_df <- primeDay_tweets_df[, order(names(primeDay_tweets_df))] #ordering file with column names
#for creating cumulative file
#temp <- strftime(primeDay_tweets_df$created, '%Y-%m-%d')
if (file.exists(paste('primeDay', '_stack.csv'))== FALSE) {
write.csv(primeDay_tweets_df, file = paste('primeDay', '_stack.csv'), row.names = FALSE)
}
#writing a function to calculate scores
score.sentiment <- function(sentences, pos.words, neg.words, myprogress='text')
{
require(dplyr)
require(stringr)
scores <- laply(sentences, function(sentence, pos.words, neg.words, myprogress='text'){
sentence <- gsub('[[:punct:]]', "", sentence)
sentence <- gsub('[[:cntrl:]]', "", sentence)
sentence <- gsub('\\d+', "", sentence)
sentence <- tolower(sentence)
word.list <- str_split(sentence, '\\s+')
words <- unlist(word.list)
pos.matches <- match(words, pos.words)
neg.matches <- match(words, neg.words)
pos.matches <- !is.na(pos.matches)
neg.matches <- !is.na(neg.matches)
score <- sum(pos.matches) - sum(neg.matches)
return(score)
}, pos.words, neg.words)
scores.df <- data.frame(score=scores, text=sentences)
return(scores.df)
}
pos_dic = scan('wordDictionaryFiles/positive-words.txt',
what='character', comment.char=';')
neg_dic = scan('wordDictionaryFiles/negative-words.txt',
what='character', comment.char=';')
# Add a few twitter-specific negative phrases
pos.words1 <- c(pos_dic, 'upgrade', ':)', '#iVoted', 'voted')
neg.words1 <- c(neg_dic,  'wtf', 'epicfail', 'douchebag')
primeDay_tweets_df$text <- as.factor(primeDay_tweets_df$text)
tweets <- iconv(primeDay_tweets_df$text, "WINDOWS-1252","UTF-8")
#scores <- score.sentiment(tweets, pos.words1, neg.words1, myprogress='text')
scores <- score.sentiment(tweets, pos.words1, neg.words1, myprogress='text')
scores <- mutate(scores, tweet=ifelse(scores$score > 0, 'Positive', ifelse(scores$score < 0, 'Negative', 'Neutral')))
temp <- summary(as.factor(scores$tweet))
Percentage <- temp/2000 *100
bp <- barplot(table(scores$tweet), main = "Reaction Based on 2K tweets",
ylim = c(0,1000) ,
xlab = "Reaction",
ylab ="# Tweets",
col = c("Red","light Blue","Green"))
Percentage <- temp/158093 *100
bp <- barplot(table(scores$tweet), main = "Reaction Based on 2K tweets",
ylim = c(0,150000) ,
xlab = "Reaction",
ylab ="# Tweets",
col = c("Red","light Blue","Green"))
bp <- barplot(table(scores$tweet), main = "Reaction Based on 2K tweets",
ylim = c(0,90000) ,
xlab = "Reaction",
ylab ="# Tweets",
col = c("Red","light Blue","Green"))
bp <- barplot(table(scores$tweet), main = "Reaction Based on 2K tweets",
ylim = c(0,95000) ,
xlab = "Reaction",
ylab ="# Tweets",
col = c("Red","light Blue","Green"))
bp <- barplot(table(scores$tweet), main = "Reaction Based on 2K tweets",
ylim = c(0,98000) ,
xlab = "Reaction",
ylab ="# Tweets",
col = c("Red","light Blue","Green"))
bp <- barplot(table(scores$tweet), main = "Reaction Based on 2K tweets",
ylim = c(0,100000) ,
xlab = "Reaction",
ylab ="# Tweets",
col = c("Red","light Blue","Green"))
bp <- barplot(table(scores$tweet), main = "Reaction Based on 2K tweets",
ylim = c(0,90000) ,
xlab = "Reaction",
ylab ="# Tweets",
col = c("Red","light Blue","Green"))
bp <- barplot(table(scores$tweet), main = "Reaction Based on 2K tweets",
ylim = c(0,110000) ,
xlab = "Reaction",
ylab ="# Tweets",
col = c("Red","light Blue","Green"))
bp <- barplot(table(scores$tweet), main = "Reaction Based on 2K tweets",
ylim = c(0,100000) ,
xlab = "Reaction",
ylab ="# Tweets",
col = c("Red","light Blue","Green"))
bp <- barplot(table(scores$tweet), main = "Reaction Based on 2K tweets",
ylim = c(0,980000) ,
xlab = "Reaction",
ylab ="# Tweets",
col = c("Red","light Blue","Green"))
bp <- barplot(table(scores$tweet), main = "Reaction Based on 2K tweets",
ylim = c(0,98000) ,
xlab = "Reaction",
ylab ="# Tweets",
col = c("Red","light Blue","Green"))
text(bp,0, paste(round(Percentage,1),'%'),adj = c(0,0), cex=1, pos = 3)
bp <- barplot(table(scores$tweet), main = "Reaction Based on 158K tweets",
ylim = c(0,99000) ,
xlab = "Reaction",
ylab ="# Tweets",
col = c("Red","light Blue","Green"))
bp <- barplot(table(scores$tweet), main = "Reaction Based on 158K tweets",
ylim = c(0,100000) ,
xlab = "Reaction",
ylab ="# Tweets",
col = c("Red","light Blue","Green"))
text(bp,0, paste(round(Percentage,1),'%'),adj = c(0,0), cex=1, pos = 3)
bp <- barplot(table(scores$tweet), main = "Reaction Based on 158K tweets",
ylim = c(0,99000) ,
xlab = "Reaction",
ylab ="# Tweets",
col = c("Red","light Blue","Green"))
text(bp,0, paste(round(Percentage,1),'%'),adj = c(0,0), cex=1, pos = 3)
bp <- barplot(table(scores$tweet), main = "Reaction Based on PrimeDay tweets",
ylim = c(0,99000) ,
xlab = "Reaction",
ylab ="# Tweets",
col = c("Red","light Blue","Green"))
text(bp,0, paste(round(Percentage,1),'%'),adj = c(0,0), cex=1, pos = 3)
